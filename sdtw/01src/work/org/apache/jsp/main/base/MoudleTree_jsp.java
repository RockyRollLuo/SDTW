/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.65
 * Generated at: 2017-03-31 07:35:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.main.base;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.xietong.software.sdtw.db.BaseMoudle;
import com.xietong.software.util.*;
import com.xietong.software.common.*;
import org.apache.commons.logging.*;
import java.io.*;
import java.util.*;
import com.xietong.software.common.UserInfo;
import com.xietong.software.common.HeadConst;
import com.xietong.software.util.Tool;

public final class MoudleTree_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {


public TreeItem initTree(BaseMoudle item, Map parent) {
    TreeItem ti = cloneTi(item);
    List list = (List)parent.get("" + item.getId());
    if (list != null) {
        for (Iterator it = list.iterator(); it.hasNext();) {
        	BaseMoudle v = (BaseMoudle)it.next();
            TreeItem nti = cloneTi(v);
            TreeItem sti = initTree(v, parent);
            if (sti.equals(nti)) {
                ti.put(sti.getId(), sti);
            }
            else {
                sti.put(nti.getId(), nti);
            }
        }
    }
    return ti;
}

public TreeItem cloneTi(BaseMoudle item) {
    TreeItem ti = new TreeItem();
    ti.setId(item.getId());
    ti.setPid(item.getPid());
    ti.setName(item.getName());
    ti.setCode(item.getCode());
    ti.setOrders("" + item.getOrderNum());
    ti.setClassName("Moudle");
    return ti;
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/main/base/../js/jsheader.jsp", Long.valueOf(1485156249000L));
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> \r\n");
      out.write("\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\"> \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("var GBasePath = \"");
      out.print(HeadConst.root_url_path);
      out.write("\";\r\n");
      out.write("var GResPath = \"");
      out.print(HeadConst.apache_url);
      out.write("/main\";\r\n");
{
      out.write("var GImagePath = \"");
      out.print(HeadConst.apache_url);
      out.write("/main/images/skin/");
UserInfo ui = Tool.getUserInfo(request); if (ui == null) out.print("blue"); else out.print(ui.getSkinId());
      out.write('"');
      out.write(';');
}
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	Log log = LogFactory.getLog(BaseMoudle.class);
	log.debug("MoudleTree");
	String msg = (String)request.getAttribute("msg");
	if ((msg != null)) {
	    out.print(HtmlTool.msgBox(request, msg));
	    return;
	}
	response.setDateHeader ("Expires", 0);
	//以下代码将产生树
	UserInfo userInfo = Tool.getUserInfo(request);
	if (userInfo==null) {
	    out.print(HtmlTool.msgBox(request, "用户未登录!"));
	    return;
	}
	BaseMoudle v = new BaseMoudle();
	List cdt = new ArrayList();
	cdt.add("Order by ordernum");
	Map imap = v.initParentMap(cdt);

	String treeRootKey = v.findRootKey(imap);
	log.debug("rootkey=" + treeRootKey);
	List tree = new ArrayList();
	if (imap.get(treeRootKey) == null) {
	    out.print(HtmlTool.msgBox(request, "没有树结点！"));
	    return;
	}
	StringBuffer strTree = new StringBuffer();
	for (Iterator it = ((List)imap.get(treeRootKey)).iterator(); it.hasNext();) {
		BaseMoudle pv = (BaseMoudle)it.next();
	    TreeItem ti = initTree(pv, imap);
	    strTree.append(HtmlTool.getTreeView(ti, "tree", "tree", "treeClick", 1, true));
	}
	Map extMaps = (Map)request.getAttribute("Ext");
	List paras = HttpTool.getSavedUrlForm(request, "Ext");
	List urls = (List)paras.get(0);
	List forms = (List)paras.get(1);
	urls.addAll((List)paras.get(2));
	String url = Tool.join("&", urls);

      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("\t\t<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(HeadConst.apache_url);
      out.write("/main/images/skin/");
      out.print(userInfo.getSkinId());
      out.write("/css_blue.css\">\r\n");
      out.write("\t\t<script src=\"");
      out.print(HeadConst.apache_url);
      out.write("/main/js/xtree.js\"></script>\r\n");
      out.write("\t\t<link type=\"text/css\" rel=\"stylesheet\" href=\"");
      out.print(HeadConst.apache_url);
      out.write("/main/js/xtree.css\">\r\n");
      out.write("\t\t<script src=\"");
      out.print(HeadConst.apache_url);
      out.write("/main/js/xmlextras.js\"></script>\r\n");
      out.write("\t\t<script src=\"");
      out.print(HeadConst.apache_url);
      out.write("/main/js/common.js\"></script>\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t\tvar url_para = \"");
      out.print(url);
      out.write("\";\r\n");
      out.write("\t\t\tvar tree = new WebFXTree(\"模块\", \"javascript:treeClick(tree.getSelected());\", \"[{type:'Moudle',id:'-1',pid:'-1',code:'',pcode:'',name:'模块',url:'',checked:'0'}]\", 0, 0);\r\n");
      out.write("\t\t\tvar rows = {\"-1\": {\"Id\": \"-1\", \"Pid\": \"-1\", \"Name\": \"\", \"TheType\": \"\", \"DocumentType\": \"\", \"DocumentScope\": \"\", \"MoudleGrade\": \"0\", \"OrderBy\": \"0\",  \"ToUrl\": \"\", \"Show\": \"1\", \"ExcludeUsers\": \"\"}};\r\n");
      out.write("\t\t\tvar currItem = {};\r\n");
      out.write("\t\t\tfunction init() {\r\n");
      out.write("\t\t\t    if (document.getElementById) {\r\n");
      out.write("\t\t\t        tree.setBehavior(\"classic\");\r\n");
      out.write("\t\t\t        ");
      out.print(strTree);
      out.write("\r\n");
      out.write("\t\t\t        document.getElementById(\"treelist\").innerHTML = tree;\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tfunction treeClick(item) {\r\n");
      out.write("\t\t\t    currItem = item;\r\n");
      out.write("\t\t\t    document.getElementById(\"prompt\").innerHTML = \"当前选中:[\" + currItem.data.name + \"]\";\r\n");
      out.write("\t\t\t    getMoudle(currItem.data.id);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tfunction editIt() {\r\n");
      out.write("\t\t\t    if (currItem.data == undefined || (currItem.data.id == undefined || currItem.data.id == \"-1\")) {\r\n");
      out.write("\t\t\t        alert(\"请选择可编辑模块!\");\r\n");
      out.write("\t\t\t        return;\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t    window.location = \"MoudleAction.jsp?cmd=modify&Id=\" + currItem.data.id + ((url_para.length == 0) ? \"\" : \"&\" + url_para);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tfunction cloneIt() {\r\n");
      out.write("\t\t\t    if (currItem.data == undefined || (currItem.data.id == undefined || currItem.data.id == \"-1\")) {\r\n");
      out.write("\t\t\t        alert(\"请选择可复制模块!\");\r\n");
      out.write("\t\t\t        return;\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t    window.location = \"MoudleAction.jsp?cmd=clone&Id=\" + currItem.data.id + ((url_para.length == 0) ? \"\" : \"&\" + url_para);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tfunction addNewSub(className, url_para)\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\t if ((currItem.data == undefined)||(currItem.data.id == undefined))  {\r\n");
      out.write("\t\t\t        alert(\"请选择模块!\");\r\n");
      out.write("\t\t\t        return;\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t    if (!url_para)\r\n");
      out.write("\t\t\t        url_para = \"\";\r\n");
      out.write("\t\t\t    var item = rows[currItem.data.id];\r\n");
      out.write("\t\t\t    location = \"MoudleAction.jsp?cmd=create&Pid=\" + item.Id + \"&MoudleGrade=\" + (parseInt(item.MoudleGrade) + 1) + ((url_para.length == 0) ? \"\" : \"&\" + url_para); \r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tfunction getMoudle(id)\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t    var rtnval = rows[id];\r\n");
      out.write("\t\t\t    //\"cmd\", \"page\", \"idlist\", \"Id\", \"Pid\", \"Name\", \"Code\", \"MoudleGrade\", \"MoudleType\",\"IsDept\", \"ToUrl\", \"OrderNum\", \"IsEnable\", \"OpLog\"};\r\n");
      out.write("\t\t\t    //var keys = [\"Id\", \"Pid\", \"Name\", \"Code\", \"MoudleGrade\", \"MoudleOrFun\", \"IsDept\", \"OrderNum\",  \"ToUrl\"];\r\n");
      out.write("\t\t\t    //var decs = [\"Id\", \"上级模块\", \"模块名称\", \"编码\", \"级别\", \"类型\", \"部门模块\", \"排序\", \"连接Url\"];\r\n");
      out.write("\t\t\t    var keys = [\"Id\", \"Pid\", \"Name\", \"MoudleGrade\",  \"IsDept\",\"OrderNum\",  \"ToUrl\"];\r\n");
      out.write("\t\t\t    var decs = [\"Id\", \"上级模块\", \"模块名称\",  \"级别\", \"部门模块\",\"排序\", \"连接Url\"];\r\n");
      out.write("\t\t\t    if (rtnval == undefined) {\r\n");
      out.write("\t\t\t        var str = loadSync(GBasePath + \"/main/common/Rpc.jsp?cmd=MoudleToMap&id=\" + id + \"&orgid=");
      out.print(ParamUtils.getIntParameter(request, "_OrgId_", -1));
      out.write("\", false);\r\n");
      out.write("\t\t\t     \tdocument.getElementById(\"rpcForm\").innerHTML = str;\r\n");
      out.write("\t\t\t        rtnval = {};\r\n");
      out.write("\t\t\t        for (var i in keys) {\r\n");
      out.write("\t\t\t            rtnval[keys[i]] = document.rpc[keys[i]].value;\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t        document.getElementById(\"rpcForm\").innerHTML = \"\";\r\n");
      out.write("\t\t\t        rows[id] = rtnval;\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t    var str = \"<ul>\";\r\n");
      out.write("\t\t\t    for (var i in keys) {\r\n");
      out.write("\t\t\t        str += \"<li>\" + decs[i] + \":\" + rtnval[keys[i]] + \"</li>\";\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t    str += \"</ul>\";\r\n");
      out.write("\t\t\t    document.getElementById(\"content\").innerHTML = str;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("\t<body onload=\"init();\">\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("\t\t\t<tr> \r\n");
      out.write("\t\t\t\t<td valign=\"top\">\r\n");
      out.write("\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"1\" cellpadding=\"0\" bgcolor=\"#33577B\">\r\n");
      out.write("  \t \t\t\t\t\t<tr>\r\n");
      out.write("      \t\t\t\t\t\t<td bgcolor=\"#FFFFFF\" valign=\"top\">\r\n");
      out.write("        \t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("          \t\t\t\t\t\t\t<tr>\r\n");
      out.write("            \t\t\t\t\t\t\t<td height=\"26\" background=\"");
      out.print(HeadConst.apache_url);
      out.write("/main/images/skin/");
      out.print(userInfo.getSkinId());
      out.write("/xxdhbj.png\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n");
      out.write("              \t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("                \t\t\t\t\t\t\t\t\t<td width=\"26\"><div align=\"center\"><img src=\"");
      out.print(HeadConst.apache_url);
      out.write("/main/images/skin/");
      out.print(userInfo.getSkinId());
      out.write("/xxdhbjanl.gif\"></div></td>\r\n");
      out.write("                \t\t\t\t\t\t\t\t\t<td width=\"55\" class=\"bt\"><b>模块管理</b></td>\r\n");
      out.write("                \t\t\t\t\t\t\t\t\t<td>&nbsp;&nbsp;&nbsp;&nbsp;<span id=\"prompt\" class=\"bt\">请选择一个模块</span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<td width=\"24\"><div align=\"center\"><img src=\"");
      out.print(HeadConst.apache_url);
      out.write("/main/images/skin/");
      out.print(userInfo.getSkinId());
      out.write("/xxdhbjanr5.png\"></div></td>\r\n");
      out.write("                \t\t\t\t\t\t\t\t\t<td width=\"55\" class=\"bt\"><a href=\"javascript:editIt();\">编辑</a></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<td width=\"24\"><div align=\"center\"><img src=\"");
      out.print(HeadConst.apache_url);
      out.write("/main/images/skin/");
      out.print(userInfo.getSkinId());
      out.write("/xxdhbjanr5.png\"></div></td>\r\n");
      out.write("                \t\t\t\t\t\t\t\t\t<td width=\"55\" class=\"bt\"><a href=\"javascript:cloneIt();\">复制</a></td>\r\n");
      out.write("                \t\t\t\t\t\t\t\t\t<td width=\"24\"><div align=\"center\"><img src=\"");
      out.print(HeadConst.apache_url);
      out.write("/main/images/skin/");
      out.print(userInfo.getSkinId());
      out.write("/xxdhbjanr4.png\"></div></td>\r\n");
      out.write("                \t\t\t\t\t\t\t\t\t<td width=\"70\" class=\"bt\"><a href=\"javascript:addNewSub('Moudle', url_para);\">增加下一级</a></td>\r\n");
      out.write("              \t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("            \t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("          \t\t\t\t\t\t\t</tr>\r\n");
      out.write("          \t\t\t\t\t\t\t<tr>\r\n");
      out.write("            \t\t\t\t\t\t\t<td valign=\"top\"> \r\n");
      out.write("              \t\t\t\t\t\t\t\t<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"6\">\r\n");
      out.write("                \t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("                  \t\t\t\t\t\t\t\t\t<td style=\"padding: 20px;\" id=\"treelist\" width=\"40%\" valign=\"top\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<td width=\"60%\" id=\"content\" valign=\"top\"></td>\r\n");
      out.write("                \t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("                \t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("                  \t\t\t\t\t\t\t\t\t<td style=\"padding: 20px;\" colspan=\"2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"content\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"rpcForm\" style=\"display:none\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("                \t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("              \t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t                \t</td>\r\n");
      out.write("          \t\t\t\t\t\t\t</tr>\r\n");
      out.write("        \t\t\t\t\t\t</table> \r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("    \t\t\t\t\t</tr>\r\n");
      out.write("  \t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
