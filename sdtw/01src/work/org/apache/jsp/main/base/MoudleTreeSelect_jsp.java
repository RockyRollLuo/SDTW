/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.65
 * Generated at: 2017-03-31 07:36:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.main.base;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.xietong.software.sdtw.db.BaseMoudle;
import com.xietong.software.util.*;
import com.xietong.software.common.*;
import org.apache.commons.logging.*;
import java.io.*;
import java.util.*;
import com.xietong.software.common.UserInfo;
import com.xietong.software.common.HeadConst;
import com.xietong.software.util.Tool;

public final class MoudleTreeSelect_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/main/js/jsheader.jsp", Long.valueOf(1485156249000L));
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("var GBasePath = \"");
      out.print(HeadConst.root_url_path);
      out.write("\";\r\n");
      out.write("var GResPath = \"");
      out.print(HeadConst.apache_url);
      out.write("/main\";\r\n");
{
      out.write("var GImagePath = \"");
      out.print(HeadConst.apache_url);
      out.write("/main/images/skin/");
UserInfo ui = Tool.getUserInfo(request); if (ui == null) out.print("blue"); else out.print(ui.getSkinId());
      out.write('"');
      out.write(';');
}
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write('\r');
      out.write('\n');

Log log = LogFactory.getLog(BaseMoudle.class);
log.debug("MoudleTree");
String msg = (String)request.getAttribute("msg");
if ((msg != null)) {
    out.print(HtmlTool.msgBox(request, msg));
    return;
}
response.setDateHeader ("Expires", 0);
//以下代码将产生树
UserInfo userInfo = Tool.getUserInfo(request);
if (userInfo==null) {
    out.print(HtmlTool.msgBox(request, "用户未登录!"));
    return;
}
String ids = (String)request.getAttribute("ids");
String flag = (String)request.getAttribute("flag");
BaseMoudle v = new BaseMoudle();
List cdt = new ArrayList();
cdt.add("order by OrderNum");
cdt.add("limit 0, 300");
if(flag.equals("1")){
	cdt.add("MoudleType=" + flag);//flag ==1 功能点
}else{
	cdt.add("MoudleType<=" + flag);
}
cdt.add("order by id");
Map imap = v.initParentMap(cdt);
String treeRootKey = v.findRootKey(imap);
log.debug("rootkey=" + treeRootKey);
List tree = new ArrayList();
if (imap.get(treeRootKey) == null) {
    out.print(HtmlTool.msgBox(request, "没有树结点！"));
    return;
}
StringBuffer strTree = new StringBuffer();
BaseMoudle cm = new BaseMoudle();
for (Iterator it = ((List)imap.get(treeRootKey)).iterator(); it.hasNext();) {
	BaseMoudle pv = (BaseMoudle)it.next();
    TreeItem ti = cm.initTree(pv, imap);
    ti.setCode(pv.getCode());
    //strTree.append(HtmlTool.getTreeView(ti, "tree", "tree", "treeClick", 1, true));
    strTree.append(HtmlTool.getCheckBoxTree(ti, "tree", "tree", 1,ids));
}
Map extMaps = (Map)request.getAttribute("Ext");
List paras = HttpTool.getSavedUrlForm(request, "Ext");
List urls = (List)paras.get(0);
List forms = (List)paras.get(1);
urls.addAll((List)paras.get(2));
String url = Tool.join("&", urls);


      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=utf-8\">\r\n");
      out.write("<link rel=\"STYLESHEET\" type=\"text/css\" href=\"");
      out.print(HeadConst.apache_url);
      out.write("/main/images/skin/");
      out.print(Tool.getUserInfo(request).getSkinId());
      out.write("/css_blue.css\">\r\n");
      out.write("<script src=\"");
      out.print(HeadConst.apache_url);
      out.write("/main/js/xtree.js\"></script>\r\n");
      out.write("<link type=\"text/css\" rel=\"stylesheet\" href=\"");
      out.print(HeadConst.apache_url);
      out.write("/main/js/xtree.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<script>\r\n");
      out.write("var url_para = \"");
      out.print(url);
      out.write("\";\r\n");
      out.write("var currItem = {};\r\n");
      out.write("var rows = {\"-1\": {\"Id\": \"-1\", \"Pid\": \"-1\", \"Name\": \"\", \"TheType\": \"\", \"DocumentType\": \"\", \"DocumentScope\": \"\", \"Grade\": \"0\", \"OrderBy\": \"0\",  \"ToUrl\": \"\", \"Show\": \"1\", \"ExcludeUsers\": \"\"}};\r\n");
      out.write("if (document.getElementById) {\r\n");
      out.write("    var tree = new WebFXTree(\"模块\");\r\n");
      out.write("    //var tree = new WebFXTree(\"模块\", \"javascript:void(0);\", \"[]\", 1, 0);\r\n");
      out.write("    tree.setBehavior(\"classic\");\r\n");
      out.write("    ");
      out.print(strTree);
      out.write("\r\n");
      out.write("    document.write(tree);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function treeClick(item) {\r\n");
      out.write("\tcurrItem = item;\r\n");
      out.write("    //document.getElementById(\"prompt\").innerHTML = \"当前选中:[\" + currItem.data.name + \"]\";\r\n");
      out.write("}\r\n");
      out.write("function editIt() {\r\n");
      out.write("    if (currItem.data.id == undefined || currItem.data.id == \"-1\") {\r\n");
      out.write("        alert(\"请选择可编辑模块!\");\r\n");
      out.write("        return;\r\n");
      out.write("    }\r\n");
      out.write("    window.location = \"");
      out.print(request.getAttribute("classname"));
      out.write("Action.jsp?cmd=modify&Id=\" + currItem.data.id + ((url_para.length == 0) ? \"\" : \"&\" + url_para);\r\n");
      out.write("}\r\n");
      out.write("function cloneIt() {\r\n");
      out.write("    if (currItem.data.id == undefined || currItem.data.id == \"-1\") {\r\n");
      out.write("        alert(\"请选择可复制模块!\");\r\n");
      out.write("        return;\r\n");
      out.write("    }\r\n");
      out.write("    window.location = \"");
      out.print(request.getAttribute("classname"));
      out.write("Action.jsp?cmd=clone&Id=\" + currItem.data.id + ((url_para.length == 0) ? \"\" : \"&\" + url_para);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function addNewSub(className, url_para)\r\n");
      out.write("{\r\n");
      out.write("    if (currItem.data.id == undefined) {\r\n");
      out.write("        alert(\"请选择模块!\");\r\n");
      out.write("        return;\r\n");
      out.write("    }\r\n");
      out.write("    if (!url_para)\r\n");
      out.write("        url_para = \"\";\r\n");
      out.write("    var item = rows[currItem.data.id];\r\n");
      out.write("    for(var u in currItem.data){\r\n");
      out.write("    \t//alert(u);\r\n");
      out.write("    }\r\n");
      out.write("    location = className + \"Action.jsp?cmd=create&Pid=\" + currItem.data.id +  ((url_para.length == 0) ? \"\" : \"&\" + url_para); \r\n");
      out.write("}\r\n");
      out.write("function selectAll(flag)\r\n");
      out.write("{\r\n");
      out.write("    tree.expandAll();\r\n");
      out.write("    for (var i = 0; i < webFXTreeHandler.idCounter; i++) {\r\n");
      out.write("        var item = webFXTreeHandler.getItem(i);\r\n");
      out.write("        if (item != undefined)\r\n");
      out.write("            if (item.data != undefined && item.type == webFXTreeConfig.checkboxType && item.checked == (1 - flag)) {\r\n");
      out.write("                item.check();\r\n");
      out.write("            }\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function ok()\r\n");
      out.write("{\r\n");
      out.write("    var rtn = {\"ids\": \"\", \"names\" : \"\", \"codes\" : \"\",\"funids\":\"\", \"funnames\" : \"\", \"funcodes\" : \"\"};\r\n");
      out.write("    var items = tree.getCheckeds();\r\n");
      out.write("    for(m in items){\r\n");
      out.write("    \tif(items[m].checked==\"1\"){//模块串\r\n");
      out.write("    \t\tif(rtn.ids==\"\"){\r\n");
      out.write("            \t\trtn.ids=items[m].id;\r\n");
      out.write("            \t}else{\r\n");
      out.write("            \t\trtn.ids=rtn.ids+\",\"+items[m].id;\r\n");
      out.write("            \t}\r\n");
      out.write("                if(rtn.names==\"\"){\r\n");
      out.write("            \t\trtn.names=items[m].name;\r\n");
      out.write("            \t}else{\r\n");
      out.write("            \t\trtn.names=rtn.names+\",\"+items[m].name;\r\n");
      out.write("            \t}\r\n");
      out.write("            \tif(rtn.codes==\"\"){\r\n");
      out.write("            \t\trtn.codes=items[m].code;\r\n");
      out.write("            \t}else{\r\n");
      out.write("            \t\trtn.codes=rtn.codes+\",\"+items[m].code;\r\n");
      out.write("            \t}\r\n");
      out.write("           }\r\n");
      out.write("    \t\r\n");
      out.write("    }\r\n");
      out.write("    window.opener.document.postForm.MoudleIds.value = rtn.ids;\r\n");
      out.write("    window.opener.document.postForm.MoudleCode.value = rtn.codes;\r\n");
      out.write("    window.opener.document.postForm.MoudleNames.value = rtn.names;\r\n");
      out.write("    top.close();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function ok1()\r\n");
      out.write("{\r\n");
      out.write("    var rtn = {\"ids\": \"\", \"names\" : \"\", \"codes\" : \"\",\"funids\":\"\", \"funnames\" : \"\", \"funcodes\" : \"\"};\r\n");
      out.write("    var items = tree.getCheckeds();\r\n");
      out.write("    for(m in items){\r\n");
      out.write("    \tif(items[m].checked==\"1\"){\r\n");
      out.write("    \t\tif(rtn.funids==\"\"){\r\n");
      out.write("            \t\trtn.funids=items[m].id;\r\n");
      out.write("            \t}else{\r\n");
      out.write("            \t\trtn.funids=rtn.funids+\",\"+items[m].id;\r\n");
      out.write("            \t}\r\n");
      out.write("                if(rtn.funnames==\"\"){\r\n");
      out.write("            \t\trtn.funnames=items[m].name;\r\n");
      out.write("            \t}else{\r\n");
      out.write("            \t\trtn.funnames=rtn.funnames+\",\"+items[m].name;\r\n");
      out.write("            \t}\r\n");
      out.write("            \tif(rtn.funcodes==\"\"){\r\n");
      out.write("            \t\trtn.funcodes=items[m].code;\r\n");
      out.write("            \t}else{\r\n");
      out.write("            \t\trtn.funcodes=rtn.funcodes+\",\"+items[m].code;\r\n");
      out.write("            \t}\r\n");
      out.write("            }\r\n");
      out.write("    \t\r\n");
      out.write("    \t\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    window.opener.document.postForm.FunIds.value = rtn.funids;\r\n");
      out.write("    window.opener.document.postForm.FunCodes.value = rtn.funcodes;\r\n");
      out.write("    window.opener.document.postForm.FunNames.value = rtn.funnames;\r\n");
      out.write("    top.close();\r\n");
      out.write("}\r\n");
      out.write("function cancel()\r\n");
      out.write("{\r\n");
      out.write("    top.close();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<br>\r\n");
      out.write("<div id=\"buttons\" align=\"center\">\r\n");
      out.write("<input type=\"button\" value=\"展开\" onclick=\"javascript:tree.expandAll();\">\r\n");
      out.write("<input type=\"button\" value=\"全选\" onclick=\"javascript:selectAll(1);\">\r\n");
      out.write("<input type=\"button\" value=\"全否\" onclick=\"javascript:selectAll(0);\">\r\n");
if(flag.equals("0")) {
      out.write("\r\n");
      out.write("<input type=\"button\" value=\"选定\" onclick=\"javascript:ok();\">\r\n");
}else{ 
      out.write("\r\n");
      out.write("<input type=\"button\" value=\"选定\" onclick=\"javascript:ok1();\">\r\n");
}
      out.write("\r\n");
      out.write("<input type=\"button\" value=\"取消\" onclick=\"javascript:cancel();\">\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
