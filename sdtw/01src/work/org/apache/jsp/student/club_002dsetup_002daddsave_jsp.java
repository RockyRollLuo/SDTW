/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.65
 * Generated at: 2017-04-08 01:33:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.student;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.xietong.software.base.Power;
import java.util.List;
import java.util.ArrayList;
import com.xietong.software.sdtw.db.ClientAttach;
import com.xietong.software.common.FileTool;
import java.util.Calendar;
import java.util.Date;
import com.xietong.software.util.Base64.InputStream;
import com.xietong.software.common.CUploadFile;
import com.xietong.software.base.SdtwConst;
import com.xietong.software.common.HeadConst;
import com.xietong.software.util.ParamUtils;
import com.xietong.software.sdtw.db.Club;
import com.xietong.software.common.HtmlTool;
import com.xietong.software.util.Tool;
import com.xietong.software.common.UserInfo;

public final class club_002dsetup_002daddsave_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {


private synchronized int save(Club v ,HttpServletRequest request){
	int Id = ParamUtils.getIntParameter(request, "Id", -1);
	String City = ParamUtils.getParameter(request,"City","-1");
	String ClubName = ParamUtils.getParameter(request,"ClubName","-1");
	String ClubType = ParamUtils.getParameter(request,"ClubType","-1");
	String Chairman = ParamUtils.getParameter(request,"Chairman","-1");
	String Academy = ParamUtils.getParameter(request,"Academy","-1");
	String Teacher = ParamUtils.getParameter(request,"Teacher","-1");
	String Clubqq = ParamUtils.getParameter(request,"Clubqq","");
	String ClubeMail = ParamUtils.getParameter(request,"ClubeMail","");
	String ClubPubAccount = ParamUtils.getParameter(request,"ClubPubAccount","");
	String Tenet = ParamUtils.getParameter(request,"Tenet","");
	String ClubProfile = ParamUtils.getParameter(request,"ClubProfile","");
	String AddFileList = ParamUtils.getParameter(request,"AddFileList","");
	String SId = ParamUtils.getParameter(request,"SId","");//发起人ids
	String Feasibility = ParamUtils.getParameter(request,"Feasibility","");
	String CommentTea = ParamUtils.getParameter(request,"CommentTea","");
	int num = 0;
	if(v.getById(Id)!=null){
		v = v.getById(Id);
		if(SdtwConst.CHECKFLAG_XXWTG.equals(v.getCheckFlag())) {
			v.setCheckFlag(SdtwConst.CHECKFLAG_XYTG);
		}
	}
	v.setCity(City);
	v.setClubName(ClubName);
	v.setClubType(ClubType);
	v.setChairman(Chairman);
	v.setAcademy(Academy);
	v.setTeacher(Teacher);
	v.setClubqq(Clubqq);
	v.setClubeMail(ClubeMail);
	v.setClubPubAccount(ClubPubAccount);
	v.setTenet(Tenet);
	v.setClubProfile(ClubProfile);
	v.setAddFileList(AddFileList);
	v.setSponsor(SId);
	v.setFeasibility(Feasibility);
	v.setCommentTea(CommentTea);
	 v.setRecruitmentStart(ParamUtils.getDateTimeParameter(request, "RecruitmentStart", java.sql.Date.valueOf("0001-01-01")));
     v.setRecruitmentStop(ParamUtils.getDateTimeParameter(request, "RecruitmentStop", java.sql.Date.valueOf("0001-01-01")));
	if(v.getById(Id)==null){
		UserInfo ui = Tool.getUserInfo(request);
		UserInfo userInfo =null;
		if(ui.hasFunPower(Power.USERSTUDENTPOWER)){
			userInfo = ui;
		}
		v.setAddPerson(ui.getId()+"");
		num = v.insert();
	}else{
		num = v.update();
	}
	return num;
}
private synchronized int shangbao(Club v ,HttpServletRequest request){
	if(SdtwConst.CHECKFLAG_XXWTG.equals(v.getCheckFlag())) {
		v.setCheckFlag(SdtwConst.CHECKFLAG_XYTG);
	}else{
		v.setCheckFlag(SdtwConst.CHECKFLAG_SB);
	}
	int num = v.update();
	return num;
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

UserInfo ui = Tool.getUserInfo(request);
UserInfo userInfo =null;
if(ui.hasFunPower(Power.USERSTUDENTPOWER)){
	userInfo = ui;
}
if(userInfo == null){
	out.print(HtmlTool.msgBox(request, "请先登录","../index.jsp","../index.jsp"));
	return;
}
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

String cmd = ParamUtils.getParameter(request,"cmd","list");
if("list".equals(cmd)){
	Club club = new Club();
	int num = 0;
	num = save(club,request);
	if(num>0)
	response.sendRedirect(HeadConst.apache_url+"/student/club-setup-list.jsp");
	return;
}
if("shangbao".equals(cmd)){
	int id = ParamUtils.getIntParameter(request,"id",-1);
	Club club = new Club();
	if(id!=-1&&club.getById(id)!=null){
		club = club.getById(id);
	}
	club = club.getById(id);
	int num = shangbao(club,request);
	if(num>0)
	response.sendRedirect(HeadConst.apache_url+"/student/club-setup-list.jsp");
	return;
}
if(cmd.equals("otherattach")){
    String fileElementId = ParamUtils.getParameter(request,"fileElementId","");
	Calendar c = Calendar.getInstance();
	if(!FileTool.exists(HeadConst.root_file_path+"/main/upload/"+c.get(Calendar.YEAR))){
		FileTool.createDir(HeadConst.root_file_path+"/main/upload/"+c.get(Calendar.YEAR));
	}
	 if(!FileTool.exists(HeadConst.root_file_path+"/main/upload/"+c.get(Calendar.YEAR)+"/"+(c.get(Calendar.MONTH)+1))){
		FileTool.createDir(HeadConst.root_file_path+"/main/upload/"+c.get(Calendar.YEAR)+"/"+(c.get(Calendar.MONTH)+1));
	}  
	CUploadFile cuf = new CUploadFile(fileElementId,new Date().getTime()+"","/main/upload/"+c.get(Calendar.YEAR)+"/"+(c.get(Calendar.MONTH)+1));
	cuf.setlimitSize(1024*1024*10L);
	//InputStream is = cuf.saveFileStream(request);
	int fl = cuf.save(request);
	if(fl==-1){//上传失败
    	try{
    		out.clear();
			out.print("{error:'上传失败',msg:''}");
    	}catch(Exception e){
    		e.printStackTrace();
    	}
	}else if(fl==0){
		out.clear();
		out.print("{error:'附件大小超过10M不能上传',msg:''}");
	}else{//上传成功
		try{
			ClientAttach attach = new ClientAttach();
			attach.setDataBase("tuanwei");
			attach.setAttachType(0);
			//attach.setUploadType("application/msword");
			attach.setUploadName(cuf.getRealName());
			attach.setAttachSize(100);
			attach.setUploadDate(new Date());
			
			attach.setGenerateName(cuf.getSavePath()+"/"+cuf.getSaveTotalName());
			attach.setFromClass("student/club-setup-addsave");
			attach.setFromTable("club");
			if(attach.insert()>0){
				out.clear();
				out.print("{\"name\":\""+cuf.getRealName()+"\",\"error\":\"\",\"ids\":\""+attach.getId()+"\",\"msg\":\"上传成功\",\"url\":\"/main/upload/jspj/"+c.get(Calendar.YEAR)+"/"+(c.get(Calendar.MONTH)+1)+"/"+cuf.getSaveTotalName()+"\"}");
    		}else{
    			out.clear();
    			out.print("{error:'上传失败',msg:''}");
    		}
    	}catch(Exception e){
    		e.printStackTrace();
    	}
	}
	return;
}
if(cmd.equals("delAttach")){
	int tmpid = ParamUtils.getIntParameter(request,"did",-1);
	if(tmpid != -1){
		List cdt = new ArrayList();
		cdt.add("id="+tmpid);
		ClientAttach ca = new ClientAttach();
		ca.deleteByCondition(cdt);
		out.print("{\"error\":\"\",\"msg\":\"删除成功\"}");
	}
	else{
		out.print("{error:'删除失败',msg:''}");
	}
	return;
}
if(cmd.equals("del")){
	int id = ParamUtils.getIntParameter(request,"id",-1);
	Club club = new Club();
	if(id != -1&& club.getById(id)!=null){
		club = club.getById(id);
		int num = club.delete(id);
		if(num>0){
			//response.sendRedirect(HeadConst.apache_url+"/student/club-setup-list.jsp");
			out.println("<script>alert('删除成功');window.location='club-setup-list.jsp';</script>");
		}
	}
	return;
}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
