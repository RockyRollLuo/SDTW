/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.65
 * Generated at: 2017-04-25 08:11:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.places;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.xietong.software.util.OptionBean;
import com.xietong.software.sdtw.db.Places;
import java.util.List;
import java.util.ArrayList;
import java.sql.*;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import com.xietong.software.sdtw.*;
import com.xietong.software.sdtw.db.*;
import com.xietong.software.util.*;
import com.xietong.software.common.*;
import org.apache.commons.logging.*;
import java.io.*;
import java.util.*;

public final class places_002dapplication_002dlist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

UserInfo userInfo = Tool.getUserInfo(request);
if(userInfo == null){
		out.print(HtmlTool.msgBox(request, "请先登录"));
		return;
}
SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
Calendar calendar=Calendar.getInstance();    //当前日期date格式  
Calendar c1 = Calendar.getInstance();
Calendar c2 = Calendar.getInstance();
String currentdate=sdf.format(calendar.getTime());//当前日期

c1.add(Calendar.DAY_OF_MONTH, 7);    //7天后日期date格式  
c2.add(Calendar.DAY_OF_MONTH, 30);    //30天当前日期date格式  

String weekafterdate=sdf.format(c1.getTime()); //7天后日期  （会查出8天）
String monthafterdate=sdf.format(c2.getTime());//30天后日期（会查出31天）

String[] weekDaysName = { "星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"}; 
Map shenhe1= new HashMap();
Map shenhe2= new HashMap();
List cdt1= new ArrayList();
List list1= new ArrayList();
List cdt2= new ArrayList();
List list2= new ArrayList();
Places_Applytable pat= new Places_Applytable ();
cdt1.add("status =0");
cdt2.add("status =1");
list1=pat.query(cdt1);
list2=pat.query(cdt2);
if(list1.size()>0){
	for(int i=0;i<list1.size();i++){
		pat=(Places_Applytable)list1.get(i);
		shenhe1.put(pat.getPlaceApplycode()+pat.getApplyDate()+pat.getApplyTimeRange(), pat);
	}
}
if(list2.size()>0){
	for(int i=0;i<list2.size();i++){
		pat=(Places_Applytable)list2.get(i);
		shenhe2.put(pat.getPlaceApplycode()+pat.getApplyDate()+pat.getApplyTimeRange(), pat);
	}
}


      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<link href=\"../css/common-student.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("<script src=\"../js/tablelist.js\"></script>\r\n");
      out.write("<script src=\"../js/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!--以下2个为datepicker-->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/jqueryUI/jquery-ui.css\">\r\n");
      out.write("<script src=\"../js/jqueryUI/jquery-ui.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function applyformsubmit()\r\n");
      out.write("{\t\r\n");
      out.write("\tvar table = document.getElementById(\"applytable\");\r\n");
      out.write("\tvar rows = table.rows; \r\n");
      out.write(" \tvar a = document.getElementsByName(\"applytimerange\"); //checkboxs 所有复选框的集合\r\n");
      out.write(" \t\r\n");
      out.write(" \tvar applydata=new Array(); //存放申请数据\r\n");
      out.write(" \tvar count=0; //数组行数\r\n");
      out.write(" \tvar timerange;\r\n");
      out.write(" \tvar i=0;\r\n");
      out.write(" \t\r\n");
      out.write("\twhile(i<a.length) \r\n");
      out.write("\t{ \r\n");
      out.write(" \t\tif(a[i].checked)\r\n");
      out.write(" \t\t{ \r\n");
      out.write("\t \t\tvar row = a[i].parentElement.parentElement.parentElement.rowIndex; //获取勾选中的checkbox所在行号，注意input被div包裹了\r\n");
      out.write("\t \t\tvar col = a[i].parentElement.parentElement.cellIndex;              //获取列号\r\n");
      out.write("\t \t\t\r\n");
      out.write("\t\t\tvar colTotimerange=[\"上午\",\"下午\",\"晚上\"];\r\n");
      out.write("\t\t\ttimerange=colTotimerange[col-5];\t\t\r\n");
      out.write("\t\t\tapplydata[count]=new Array();\r\n");
      out.write("\t\t\tapplydata[count][0]=rows[row].cells[2].innerHTML;   //场地名称\r\n");
      out.write("\t\t\tapplydata[count][1]=rows[row].cells[3].innerHTML;\t//日期\r\n");
      out.write("\t\t\tapplydata[count][2]=timerange;                      //时段\r\n");
      out.write("\t\t\tapplydata[count][3]=rows[row].cells[0].innerHTML;   //placecode\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tcount++;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\ti++;\r\n");
      out.write("\t}\r\n");
      out.write("\tif(count==0){\r\n");
      out.write("\t\talert(\"未选择申请时段！\");\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tdocument.applyform.applydata.value =applydata;  \r\n");
      out.write(" \t \tdocument.applyform.count.value =count;\r\n");
      out.write("\t \tdocument.applyform.submit();\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$(function(){\r\n");
      out.write("\t$(\"#datepicker\").datepicker();\r\n");
      out.write("\t$(\"input[type=submit],input[type=button]\").button();\r\n");
      out.write("\r\n");
      out.write("// \talert(1);\r\n");
      out.write("//接收参数\r\n");
      out.write("\tvar allocatednums=document.allocatedform.allocatednums.value;\r\n");
      out.write("\tvar placecodestring=document.allocatedform.placecode2.value;\r\n");
      out.write("\tvar datestring=document.allocatedform.date.value;\r\n");
      out.write("\tvar timerangestring=document.allocatedform.timerange.value;\r\n");
      out.write("\tvar statusstring=document.allocatedform.status.value;\r\n");
      out.write("\t\r\n");
      out.write("\tvar activityprincipalstring=document.allocatedform.activityprincipal.value;\r\n");
      out.write("\tvar principalphonestring=document.allocatedform.principalphone.value;\r\n");
      out.write("\t\r\n");
      out.write("//参数数组\r\n");
      out.write("\tvar placecodearray=new Array();\r\n");
      out.write("\tvar datearray=new Array();\r\n");
      out.write("\tvar timerangearray=new Array();\r\n");
      out.write("\tvar statusarray=new Array();\r\n");
      out.write("\t\r\n");
      out.write("\tvar activityprincipalarray=new Array();\r\n");
      out.write("\tvar principalphonearray=new Array();\r\n");
      out.write("\t\r\n");
      out.write("\tplacecodearray=placecodestring.split(\",\");\r\n");
      out.write("\tdatearray=datestring.split(\",\");\r\n");
      out.write("\ttimerangearray=timerangestring.split(\",\");\r\n");
      out.write("\tstatusarray=statusstring.split(\",\");\r\n");
      out.write("\t\r\n");
      out.write("\tactivityprincipalarray=activityprincipalstring.split(\",\");\r\n");
      out.write("\tprincipalphonearray=principalphonestring.split(\",\");\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//向表中插值\t\r\n");
      out.write("\tvar table = document.getElementById(\"applytable\");\r\n");
      out.write("\tvar rows = table.rows; \r\n");
      out.write("\t\r\n");
      out.write("\tvar col;\r\n");
      out.write("\tvar statusinner;\r\n");
      out.write("\r\n");
      out.write("\tvar explaindetails=\"\";\r\n");
      out.write("\tfor(var i=0;i<allocatednums;i++)   //分条读取申请数据\r\n");
      out.write("\t{\r\n");
      out.write("\t\tif(timerangearray[i]==\"上午\") col=5;\r\n");
      out.write("\t\telse if(timerangearray[i]==\"下午\") col=6;\t\r\n");
      out.write("\t\telse if(timerangearray[i]==\"晚上\") col=7;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(i>0&&placecodearray[i]==placecodearray[i-1]&&datearray[i]==datearray[i-1]){  //拼接同一场地的“说明”\r\n");
      out.write("\t\t\texplaindetails+=timerangearray[i]+\":\"+activityprincipalarray[i]+\";\"+principalphonearray[i]+\"<br/>\";\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\texplaindetails=timerangearray[i]+\":\"+activityprincipalarray[i]+\";\"+principalphonearray[i]+\"<br/>\";\t\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(statusarray[i]==0){\r\n");
      out.write("\t\t\tstatusinner=\"\";\r\n");
      out.write("\t\t}else if(statusarray[i]==1){\r\n");
      out.write("\t\t\tstatusinner=\"<div style='width:20px;margin:auto;background:#FFD700;' ><input type='checkbox' name='applytimerange' ></div>\";\r\n");
      out.write("\t\t}else if(statusarray[i]==2){\r\n");
      out.write("\t\t\tstatusinner=\"<img src='../images/checkbox.png' title='不可申请'>\";\r\n");
      out.write("\t\t}else if(statusarray[i]==3){\r\n");
      out.write("\t\t\tstatusinner=\"<div style='width:20px;margin:auto;background:#00E5EE;' ><input type='checkbox' name='applytimerange' ></div>\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfor(var j=0;j<rows.length;j++)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(rows[j].cells[0].innerHTML==placecodearray[i]&&rows[j].cells[3].innerHTML==datearray[i])\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\trows[j].cells[col].innerHTML=statusinner;\r\n");
      out.write("\t\t\t\trows[j].cells[8].innerHTML=explaindetails; \r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");

	//接受各种参数 从session或者其他对象中 
	String myuserrole = (String)session.getAttribute("userrole"); 
	
	//接收searchform参数
	String search_placename="";   //gb2312导致空数据,已修改
 	String search_date=request.getParameter("date");
 
//  	//在没有点击查询时，两个值均为null
// 	System.out.println("查找场地名称"+search_placename);
// 	System.out.println("查找日期"+search_date);

	String wherestr1="",wherestr2="",explainstr="";
	int searchtimes=0;//查询次数
	if((search_placename==null||search_placename=="")&&(search_date==null||search_date==""))
	{
	//默认无场地，无时间
		wherestr1="";
		wherestr2=" date >= '"+currentdate+"' AND date <= '"+ weekafterdate+"'";
		searchtimes=7;
		explainstr="所有场地在7天内申请状态";
	}
	else if((search_placename!=null||search_placename!="")&&(search_date==null||search_date==""))
	{
	//有场地，无时间
		wherestr1=" WHERE placename='"+search_placename+"'";
		wherestr2=" placename='"+search_placename+"' AND date >= '"+currentdate+"' AND date <='"+ monthafterdate+"'";
		searchtimes=30;
		explainstr="场地:"+search_placename+" 在30天内所有申请状态";
	}
	else if((search_placename==null||search_placename=="")&&(search_date!=null||search_date!=""))
	{
	//无场地，有时间
		wherestr1="";
		wherestr2=" date like '%"+search_date+"%'";
		searchtimes=1;
		explainstr="所有场地在日期："+search_date+" 时的申请状态";
	}
	else
	{
	//有场地，有时间
		wherestr1=" WHERE placename='"+search_placename+"'";
		wherestr2=" placename='"+search_placename+"' AND date like '%"+search_date+"%'";
		searchtimes=1;
		explainstr="场地："+search_placename+" 在 日期："+search_date+"的申请状态";
	}
	
	String checkbox="<div style='width:20px;margin:auto;background:#66CDAA;' ><input type='checkbox' name='applytimerange' ></div>";
	String checkbox1="<div style='width:20px;margin:auto;background:#FFD700;' ><input type='checkbox' name='applytimerange' ></div>";
	String checkbox2="<img src='../images/checkbox.png' title='不可申请'>";
 
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
 
String strposition = "场地管理 >> 场地申请 >> ";
String strfunction = "场地列表--"+explainstr;
String strhelpwords = "选择场地名称，选择申请日期，勾选需要申请的场地时间段，点击“提交申请”。"
					+"绿框为可申请场地；黄框为已被提出申请，处于待审核状态；红框为已被申请成功的场地，不可再提出申请。"
					+"“说明”一栏中显示的是已被申请场地的活动负责人及其联系电话。";

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write(" <table class=\"location-table\">\r\n");
      out.write("<tr height=\"35\">\r\n");
      out.write("\t<td class=\"location-title\" >您的位置>>场地信息>>场地申请\r\n");
      out.write("\t\t<span style=\"cursor:pointer;\" onclick=\"showorhide_div('helpdiv')\"></span>\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<form name=\"searchform\" action=\"places-application-list.jsp\"method=\"post\">\r\n");
      out.write("<div style=\"padding:1em;font-family:microsoft yahei;\">\r\n");
      out.write("<span style=\"margin:1em;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;场地名称：\r\n");
      out.write("\t\t\r\n");

List placeoptions =new ArrayList();
Places  ica= new Places();
List cdt= new ArrayList();
List list3= new ArrayList();
list3=ica.query(cdt);
OptionBean ob4= new OptionBean("","");
placeoptions.add(ob4);
if(list1.size()>0){
	for(int i=0;i<list3.size();i++){
		ica=(Places )list3.get(i);
		ob4=new OptionBean(ica.getPlaceName(),ica.getPlaceName());
		placeoptions.add(ob4);
	}
}


      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t");
      out.print(HtmlTool.renderSelect(placeoptions, ParamUtils.getParameter(request, "_PlaceApplycode_","-1"), "_PlaceApplycode_", ""));
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t</span>\r\n");
      out.write("\t\r\n");
      out.write("\t\t<span style=\"padding-left:2em;\"><input type=\"submit\" value=\"查询\" ></span>\r\n");
      out.write("\t\t<span style=\"padding-left:15em;\"><input type=\"button\" value=\"提交申请\" onclick=\"applyformsubmit()\" /></span>\r\n");
      out.write("</div>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<form name=\"applyform\" method=\"post\" action=\"places-applytable.jsp\">\r\n");
      out.write("\t  <input type=\"hidden\" name=\"applydata\" value=\"\">\r\n");
      out.write("\t  <input type=\"hidden\" name=\"count\" value=\"\">\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<table class=\"content-table\" id=\"applytable\" style=\"margin-top:-10px\">\r\n");
      out.write("<tr>\r\n");
      out.write("\t<th width=\"5%\">序号</th>\r\n");
      out.write("\t<th width=\"20%\">场地名称</th>\r\n");
      out.write("\t<th width=\"12%\">日期</th>\r\n");
      out.write("\t<th width=\"12%\">星期</th>\r\n");
      out.write("\t<th width=\"10%\">上午</th>\r\n");
      out.write("\t<th width=\"10%\">下午</th>\r\n");
      out.write("\t<th width=\"10%\">晚上</th>\r\n");
      out.write("\t<th>说明</th>\r\n");
      out.write("\t\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<th colspan=\"8\" align=\"left\">说明：勾选需要申请的场地,黄色单选框表示该场地正在被申请但未审核，红色单选框表示场地已被人申请并审核通过</th>\r\n");
      out.write("</tr>\r\n");
  
 BaseUserCode bc= new BaseUserCode();
	//定义数据库中读取字段的变量 
	String placecode1="",placename1="",placecode2="",placename2="",placename1href="";
	String timerange="",statustr="",explain="",datestr="",weekday="";
	String activityprincipal="",principalphone="";//从places_applytable中去得的数据
	int places_allocationid,order=0,status,i=0,allocatednums=0;
	Date date=new Date();

List cdt3= new ArrayList();
String qual=ParamUtils.getParameter(request, "_PlaceApplycode_", "-1");
int Id=ParamUtils.getIntParameter(request, "_PlaceApplyId_", -1);
System.out.println(Id);
Places pla= new Places();
System.out.println(qual);
if(qual.length()>0&&qual!="-1"){
	cdt3.add("PlaceName ='"+qual+"'");
}
if(Id!=-1){
	pla=pla.getById(Id);
	cdt3.add("PlaceName ='"+pla.getPlaceName()+"'");
}
List list= new ArrayList();

list=pla.query(cdt3);
if(list.size()>0){
	for(int l=0;l<list.size();l++){
		pla=(Places)list.get(l);
		placename1=pla.getPlaceName();

			
			if(search_date==null||search_date==""){
				for(int k=0;k<searchtimes;k++){
					Calendar date1=Calendar.getInstance(); //当前日期date类型
					date1.add(Calendar.DAY_OF_MONTH, k); //在表格中显示日期date类型
	                datestr=sdf.format(date1.getTime()); //
					weekday=weekDaysName[date1.get(Calendar.DAY_OF_WEEK)-1];
				
					placename1href="<a href='places-details.jsp?placecode="+placecode1+"' >"+placename1+"</a>";
					String shuchu="";

      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td style=\"display:none\">");
      out.print(placecode1);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(order+1);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(placename1);
      out.write("</td>");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(datestr);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(weekday);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t");

			
							
					
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t");

							checkbox="<div style='width:20px;margin:auto;background:#66CDAA;' ><input type='checkbox' name='applytimerange' ></div>";;

							if(shenhe1.containsKey(placename1+datestr+"上午")){
								pat=(Places_Applytable)shenhe1.get(placename1+datestr+"上午");
							System.out.println("beishenqingle ");
							checkbox=checkbox1;
						
							shuchu+="该场地上午被"+pat.getPromiser()+"申请，联系方式"+pat.getPromiserPhone();
						}
							if(shenhe2.containsKey(placename1+datestr+"上午")){
								System.out.println("beishenqingle ");
								checkbox=checkbox2;
							}
								
							
						
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(checkbox);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");

									checkbox="<div style='width:20px;margin:auto;background:#66CDAA;' ><input type='checkbox' name='applytimerange' ></div>";;

									

									if(shenhe1.containsKey(placename1+datestr+"下午")){
										pat=(Places_Applytable)shenhe1.get(placename1+datestr+"下午");
										System.out.println("beishenqingle ");
										checkbox=checkbox1;
										
										shuchu+="该场地下午被"+pat.getPromiser()+"申请，联系方式"+pat.getPromiserPhone();
								}
									if(shenhe2.containsKey(placename1+datestr+"下午")){
										System.out.println("beishenqingle ");
										checkbox=checkbox2;
									}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(checkbox);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");

									
									checkbox="<div style='width:20px;margin:auto;background:#66CDAA;' ><input type='checkbox' name='applytimerange' ></div>";;

									if(shenhe1.containsKey(placename1+datestr+"晚上")){
										pat=(Places_Applytable)shenhe1.get(placename1+datestr+"晚上");
										System.out.println("beishenqingle ");
										checkbox=checkbox1;
										shuchu+="该场地晚上被"+pat.getPromiser()+"申请，联系方式"+pat.getPromiserPhone();
								}
									if(shenhe2.containsKey(placename1+datestr+"晚上")){
										System.out.println("beishenqingle ");
										checkbox=checkbox2;
									}
						
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(checkbox);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td align=\"left\">");
      out.print(shuchu );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");

					order++;
				}//endfor
			}else{
				datestr=search_date;
				
				Date date2=sdf.parse(datestr);
				calendar.setTime(date2);//date转calendar
				weekday=weekDaysName[calendar.get(Calendar.DAY_OF_WEEK)-1];

      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td style=\"display:none\">");
      out.print(placecode1);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(order+1);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(placename1);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(datestr);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(weekday);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(checkbox);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(checkbox);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(checkbox);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td align=\"left\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");

				order++;
			}//end else
		
	}
}


      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("\t<th colspan=\"8\" align=\"left\">说明：勾选需要申请的场地</th>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
