/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.65
 * Generated at: 2017-04-26 01:18:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.places;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Map;
import com.xietong.software.common.CEditConst;
import com.xietong.software.sdtw.db.BaseUserCode;
import com.xietong.software.common.UserInfo;
import com.xietong.software.sdtw.db.Places_Applytable;
import java.util.List;
import java.util.ArrayList;
import java.sql.*;
import java.util.Date;
import com.xietong.software.util.Tool;
import com.xietong.software.common.UserInfo;
import com.xietong.software.base.Power;
import com.xietong.software.util.*;
import com.xietong.software.common.*;

public final class places_002dapplyed_002dlist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<link href=\"../css/common-student.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("<script src=\"../js/tablelist.js\"></script>\r\n");
      out.write("<script src=\"../js/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body >\r\n");
 
UserInfo userinfo = Tool.getUserInfo(request);
if(!userinfo.hasFunPower(Power.USERSTUDENTPOWER)){
	out.print(HtmlTool.msgBox(request, "请先登录"));
	if (userinfo != null) {
		userinfo.removeCookie(response);
	}
	session.removeAttribute("UserInfo");
	return ;
}
BaseUserCode stu= userinfo.getUserCode();
	//接受各种参数 从session或者其他对象中 
	String useraccount = (String)session.getAttribute("useraccount"); 
	//wherestr用来传递翻页时的查询语言，因为当翻页时，wherestr就不是原来的strsql了
	String strposition = "场地管理 >> 申请状态查询>> ";
	String strfunction = "已申请场地列表";
	String strhelpwords = "已申请场地列表。";

      out.write("\r\n");
      out.write("\r\n");
      out.write(" <table class=\"location-table\">\r\n");
      out.write("<tr height=\"35\">\r\n");
      out.write("\t<td class=\"location-title\" >您的位置>>场地信息>>我的场地申请\r\n");
      out.write("\t\t<span style=\"cursor:pointer;\" onclick=\"showorhide_div('helpdiv')\"></span>\r\n");
      out.write("\t</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<table class=\"content-table\" id=\"table2\">\r\n");
      out.write("<tr>\r\n");
      out.write("  <th width=\"5%\">序号</th>\r\n");
      out.write("  <th width=\"25%\">活动内容</th>\r\n");
      out.write("  <th width=\"10%\">活动时间</th>\r\n");
      out.write("  <th width=\"20%\">场地名称</th>\r\n");
      out.write("  <th width=\"10%\">申请日期</th>\r\n");
      out.write("  <th width=\"10%\">申请时段</th>\r\n");
      out.write("<!--   <th width=\"8%\">活动负责人</th>  -->\r\n");
      out.write("<!--   <th width=\"8%\">联系方式</th>     -->\r\n");
      out.write("  <th width=\"8%\">审核状态</th>\r\n");
      out.write("  <th colspan=\"2\">操作</th>\r\n");
      out.write("</tr>\r\n");
  
	

	//定义数据库中读取字段的变量 
	String placecode="",placename="",placeapplycode="",activityprincipal="",activitycontents="",activitytime="",timerange="",statustr="",applicant="",principalphone="";
	String namehref="",modifyhref="",delhref="",apphref="";
	String shenqingshijian="";
	Map audimap=CEditConst.getAuditMap(userinfo);
	int id,order=0,status;
List list = new ArrayList();
List cdt = new ArrayList();
Places_Applytable pat = new Places_Applytable();
cdt.add("useraccount ="+stu.getId());
      list= pat.query(cdt)   ;
      if(list.size()>0){
    	  for(int i=0;i<list.size();i++){
    		  pat= (Places_Applytable)list.get(i)	;	  
    		  namehref="<a href='places-applyed-details.jsp?Id="+pat.getId()+"'>"+pat.getActivityContents()+"</a>";
    		  activitytime=Tool.stringOfDate(pat.getActivityTime());
    		  placename=pat.getPlaceApplycode();
    		  shenqingshijian=pat.getApplyDate();
    		  timerange=pat.getApplyTimeRange();
    		  if(pat.getStatus()!=""){
    		  statustr=(String)audimap.get(pat.getStatus());
    		  }
    		  if(!pat.getStatus().equals("1")){
    		  modifyhref="<a href='places-applyed-modify.jsp?Id="+pat.getId()+"'>修改</a>";
    		  delhref="<a href='Places_ApplytableAction.jsp?cmd=delete&&Id="+pat.getId()+"'>删除</a>";
    		  }

      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td>");
      out.print(order+1);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(namehref);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(activitytime);
      out.write("</td>\r\n");
      out.write("    <td>");
      out.print(placename);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(shenqingshijian );
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(timerange);
      out.write("</td>\r\n");
      out.write("\r\n");
      out.write("\t<td>");
      out.print(statustr);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(modifyhref);
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(delhref);
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
	 
order++;
modifyhref="";delhref=""; 	
statustr="";
    	  }
      }else{ 
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("    <td colspan=\"11\" >该账号未申请任何场地</td>\r\n");
      out.write("</tr>\r\n");
} 
      out.write("\r\n");
      out.write("  <tr>\r\n");
      out.write("    <th colspan=\"11\" align=\"left\">已经通过审核的场地申请不允许修改和删除</th>\r\n");
      out.write("  </tr>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
